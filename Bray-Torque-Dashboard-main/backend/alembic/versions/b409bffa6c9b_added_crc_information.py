"""Added CRC information

Revision ID: b409bffa6c9b
Revises: 1cb51c8eab89
Create Date: 2024-11-05 17:42:06.084713

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b409bffa6c9b'
down_revision: Union[str, None] = '1cb51c8eab89'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('device_datas', sa.Column('dataRecordPayloadCRCs', postgresql.ARRAY(sa.Integer()), nullable=False, server_default="{}"))
    op.add_column('device_datas', sa.Column('calculatedDataRecordPayloadCRCs', postgresql.ARRAY(sa.Integer()), nullable=False, server_default="{}"))
    op.add_column('device_datas', sa.Column('eventRecordPayloadCRC', sa.Integer(), nullable=False, server_default="-1"))
    op.add_column('device_datas', sa.Column('calculatedEventRecordPayloadCRC', sa.Integer(), nullable=False, server_default="-1"))
    op.add_column('device_datas', sa.Column('heartbeatRecordPayloadCRC', sa.Integer(), nullable=False, server_default="-1"))
    op.add_column('device_datas', sa.Column('calculatedHeartbeatRecordPayloadCRC', sa.Integer(), nullable=False, server_default="-1"))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    columns = [column['name'] for column in inspector.get_columns('device_datas')]

    # Drop columns only if they exist
    if 'calculatedHeartbeatRecordPayloadCRC' in columns:
        op.drop_column('device_datas', 'calculatedHeartbeatRecordPayloadCRC')
    if 'heartbeatRecordPayloadCRC' in columns:
        op.drop_column('device_datas', 'heartbeatRecordPayloadCRC')
    if 'calculatedEventRecordPayloadCRC' in columns:
        op.drop_column('device_datas', 'calculatedEventRecordPayloadCRC')
    if 'eventRecordPayloadCRC' in columns:
        op.drop_column('device_datas', 'eventRecordPayloadCRC')
    if 'calculatedDataRecordPayloadCRCs' in columns:
        op.drop_column('device_datas', 'calculatedDataRecordPayloadCRCs')
    if 'dataRecordPayloadCRCs' in columns:
        op.drop_column('device_datas', 'dataRecordPayloadCRCs')
    # ### end Alembic commands ###
