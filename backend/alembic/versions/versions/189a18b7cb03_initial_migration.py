"""Initial migration

Revision ID: 189a18b7cb03
Revises: 
Create Date: 2025-04-09 14:45:16.360953

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '189a18b7cb03'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aux_sensors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_datas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lastTorqueBeforeSleep', sa.Integer(), nullable=False),
    sa.Column('firstTorqueAfterSleep', sa.Integer(), nullable=False),
    sa.Column('recordNumbers', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('recordLengths', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('torqueData', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('hiddenDataIndices', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('typeOfStroke', sa.Integer(), nullable=False),
    sa.Column('dataRecordPayloadCRCs', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('calculatedDataRecordPayloadCRCs', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('eventRecordPayloadCRC', sa.Integer(), nullable=False),
    sa.Column('calculatedEventRecordPayloadCRC', sa.Integer(), nullable=False),
    sa.Column('heartbeatRecordPayloadCRC', sa.Integer(), nullable=False),
    sa.Column('calculatedHeartbeatRecordPayloadCRC', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_infos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firmwareVersion', sa.String(), nullable=False),
    sa.Column('pwaRevision', sa.String(), nullable=False),
    sa.Column('serialNumber', sa.String(), nullable=False),
    sa.Column('deviceType', sa.String(), nullable=False),
    sa.Column('deviceLocation', sa.String(), nullable=False),
    sa.Column('diagnostic', sa.Integer(), nullable=False),
    sa.Column('openValveCount', sa.Integer(), nullable=False),
    sa.Column('closeValveCount', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_trend_infos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('strokeTime', sa.Integer(), nullable=False),
    sa.Column('maxTorque', sa.Integer(), nullable=False),
    sa.Column('temperature', sa.Integer(), nullable=False),
    sa.Column('batteryVoltage', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sensors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('devEUI', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('devEUI')
    )
    op.create_table('aux_sensor_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aux_sensor_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('value', sa.Double(), nullable=False),
    sa.ForeignKeyConstraint(['aux_sensor_id'], ['aux_sensors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('isStreaming', sa.Boolean(), nullable=False),
    sa.Column('deviceInfoID', sa.Integer(), nullable=False),
    sa.Column('deviceDataID', sa.Integer(), nullable=False),
    sa.Column('deviceTrendInfoID', sa.Integer(), nullable=False),
    sa.Column('sensorID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['deviceDataID'], ['device_datas.id'], ),
    sa.ForeignKeyConstraint(['deviceInfoID'], ['device_infos.id'], ),
    sa.ForeignKeyConstraint(['deviceTrendInfoID'], ['device_trend_infos.id'], ),
    sa.ForeignKeyConstraint(['sensorID'], ['sensors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('deviceDataID'),
    sa.UniqueConstraint('deviceInfoID'),
    sa.UniqueConstraint('deviceTrendInfoID')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('events')
    op.drop_table('aux_sensor_data')
    op.drop_table('sensors')
    op.drop_table('device_trend_infos')
    op.drop_table('device_infos')
    op.drop_table('device_datas')
    op.drop_table('aux_sensors')
    # ### end Alembic commands ###
