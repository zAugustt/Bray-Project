"""Fixed table names

Revision ID: 6c6f3a8cde1b
Revises: 75a6f7623abc
Create Date: 2025-03-19 16:23:43.404989

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6c6f3a8cde1b'
down_revision: Union[str, None] = '75a6f7623abc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('device_data', sa.Column('measurementdata', postgresql.ARRAY(sa.Float()), nullable=False))
    op.drop_column('device_data', 'measurementData')
    op.add_column('event', sa.Column('deviceinfoid', sa.Integer(), nullable=False))
    op.add_column('event', sa.Column('devicedataid', sa.Integer(), nullable=False))
    op.drop_constraint('event_deviceDataID_key', 'event', type_='unique')
    op.drop_constraint('event_deviceInfoID_key', 'event', type_='unique')
    op.create_unique_constraint(None, 'event', ['deviceinfoid'])
    op.create_unique_constraint(None, 'event', ['devicedataid'])
    op.drop_constraint('event_deviceInfoID_fkey', 'event', type_='foreignkey')
    op.drop_constraint('event_deviceDataID_fkey', 'event', type_='foreignkey')
    op.create_foreign_key(None, 'event', 'device_info', ['deviceinfoid'], ['id'])
    op.create_foreign_key(None, 'event', 'device_data', ['devicedataid'], ['id'])
    op.drop_column('event', 'deviceInfoID')
    op.drop_column('event', 'deviceDataID')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('event', sa.Column('deviceDataID', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('event', sa.Column('deviceInfoID', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'event', type_='foreignkey')
    op.drop_constraint(None, 'event', type_='foreignkey')
    op.create_foreign_key('event_deviceDataID_fkey', 'event', 'device_data', ['deviceDataID'], ['id'])
    op.create_foreign_key('event_deviceInfoID_fkey', 'event', 'device_info', ['deviceInfoID'], ['id'])
    op.drop_constraint(None, 'event', type_='unique')
    op.drop_constraint(None, 'event', type_='unique')
    op.create_unique_constraint('event_deviceInfoID_key', 'event', ['deviceInfoID'])
    op.create_unique_constraint('event_deviceDataID_key', 'event', ['deviceDataID'])
    op.drop_column('event', 'devicedataid')
    op.drop_column('event', 'deviceinfoid')
    op.add_column('device_data', sa.Column('measurementData', postgresql.ARRAY(sa.DOUBLE_PRECISION(precision=53)), autoincrement=False, nullable=False))
    op.drop_column('device_data', 'measurementdata')
    # ### end Alembic commands ###
